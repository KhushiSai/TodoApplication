{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { TodoApiService } from '../services/todoApi';\nexport const useTodos = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [isCreating, setIsCreating] = useState(false);\n\n  // Fetch all todos\n  const fetchTodos = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const fetchedTodos = await TodoApiService.getAllTodos();\n      setTodos(fetchedTodos);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch todos');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Create a new todo\n  const createTodo = useCallback(async todoData => {\n    try {\n      setIsCreating(true);\n      setError(null);\n      const newTodo = await TodoApiService.createTodo(todoData);\n      setTodos(prev => [...prev, newTodo]);\n      return newTodo;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to create todo');\n      throw err;\n    } finally {\n      setIsCreating(false);\n    }\n  }, []);\n\n  // Update a todo\n  const updateTodo = useCallback(async (id, todoData) => {\n    try {\n      setError(null);\n      const updatedTodo = await TodoApiService.updateTodo(id, todoData);\n      setTodos(prev => prev.map(todo => todo.id === id ? updatedTodo : todo));\n      return updatedTodo;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to update todo');\n      throw err;\n    }\n  }, []);\n\n  // Toggle todo completion status\n  const toggleTodo = useCallback(async id => {\n    const todo = todos.find(t => t.id === id);\n    if (todo) {\n      await updateTodo(id, {\n        completed: !todo.completed\n      });\n    }\n  }, [todos, updateTodo]);\n\n  // Delete a todo\n  const deleteTodo = useCallback(async id => {\n    try {\n      setError(null);\n      await TodoApiService.deleteTodo(id);\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to delete todo');\n      throw err;\n    }\n  }, []);\n\n  // Filtered todos based on current filter\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      case 'pending':\n        return todos.filter(todo => !todo.completed);\n      default:\n        return todos;\n    }\n  }, [todos, filter]);\n\n  // Statistics\n  const stats = useMemo(() => {\n    const total = todos.length;\n    const completed = todos.filter(todo => todo.completed).length;\n    const pending = total - completed;\n    const completionRate = total > 0 ? Math.round(completed / total * 100) : 0;\n    return {\n      total,\n      completed,\n      pending,\n      completionRate\n    };\n  }, [todos]);\n\n  // Load todos on component mount\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n  return {\n    todos: filteredTodos,\n    allTodos: todos,\n    loading,\n    isCreating,\n    error,\n    filter,\n    stats,\n    setFilter,\n    fetchTodos,\n    createTodo,\n    updateTodo,\n    toggleTodo,\n    deleteTodo\n  };\n};\n_s(useTodos, \"Py2gRQfQqWIfdTZxUztVmq4F1D8=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","TodoApiService","useTodos","_s","todos","setTodos","loading","setLoading","error","setError","filter","setFilter","isCreating","setIsCreating","fetchTodos","fetchedTodos","getAllTodos","err","Error","message","createTodo","todoData","newTodo","prev","updateTodo","id","updatedTodo","map","todo","toggleTodo","find","t","completed","deleteTodo","filteredTodos","stats","total","length","pending","completionRate","Math","round","allTodos"],"sources":["C:/Users/hp/Desktop/todo6/src/hooks/useTodos.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { Todo, TodoFormData } from '../types/Todo';\r\nimport { TodoApiService } from '../services/todoApi';\r\n\r\nexport const useTodos = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filter, setFilter] = useState<'all' | 'completed' | 'pending'>('all');\r\n  const [isCreating, setIsCreating] = useState<boolean>(false);\r\n\r\n  // Fetch all todos\r\n  const fetchTodos = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const fetchedTodos = await TodoApiService.getAllTodos();\r\n      setTodos(fetchedTodos);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch todos');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Create a new todo\r\n  const createTodo = useCallback(async (todoData: TodoFormData) => {\r\n    try {\r\n      setIsCreating(true);\r\n      setError(null);\r\n      const newTodo = await TodoApiService.createTodo(todoData);\r\n      setTodos(prev => [...prev, newTodo]);\r\n      return newTodo;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to create todo');\r\n      throw err;\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  }, []);\r\n\r\n  // Update a todo\r\n  const updateTodo = useCallback(async (id: number, todoData: Partial<Todo>) => {\r\n    try {\r\n      setError(null);\r\n      const updatedTodo = await TodoApiService.updateTodo(id, todoData);\r\n      setTodos(prev => prev.map(todo => \r\n        todo.id === id ? updatedTodo : todo\r\n      ));\r\n      return updatedTodo;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to update todo');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  // Toggle todo completion status\r\n  const toggleTodo = useCallback(async (id: number) => {\r\n    const todo = todos.find(t => t.id === id);\r\n    if (todo) {\r\n      await updateTodo(id, { completed: !todo.completed });\r\n    }\r\n  }, [todos, updateTodo]);\r\n\r\n  // Delete a todo\r\n  const deleteTodo = useCallback(async (id: number) => {\r\n    try {\r\n      setError(null);\r\n      await TodoApiService.deleteTodo(id);\r\n      setTodos(prev => prev.filter(todo => todo.id !== id));\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to delete todo');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  // Filtered todos based on current filter\r\n  const filteredTodos = useMemo(() => {\r\n    switch (filter) {\r\n      case 'completed':\r\n        return todos.filter(todo => todo.completed);\r\n      case 'pending':\r\n        return todos.filter(todo => !todo.completed);\r\n      default:\r\n        return todos;\r\n    }\r\n  }, [todos, filter]);\r\n\r\n  // Statistics\r\n  const stats = useMemo(() => {\r\n    const total = todos.length;\r\n    const completed = todos.filter(todo => todo.completed).length;\r\n    const pending = total - completed;\r\n    const completionRate = total > 0 ? Math.round((completed / total) * 100) : 0;\r\n\r\n    return {\r\n      total,\r\n      completed,\r\n      pending,\r\n      completionRate\r\n    };\r\n  }, [todos]);\r\n\r\n  // Load todos on component mount\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, [fetchTodos]);\r\n\r\n  return {\r\n    todos: filteredTodos,\r\n    allTodos: todos,\r\n    loading,\r\n    isCreating,\r\n    error,\r\n    filter,\r\n    stats,\r\n    setFilter,\r\n    fetchTodos,\r\n    createTodo,\r\n    updateTodo,\r\n    toggleTodo,\r\n    deleteTodo,\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}